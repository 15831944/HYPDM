#region AgileEAS.NET-generated
//------------------------------------------------------------------------------
//     AgileEAS.NET应用开发平台，是基于敏捷并行开发思想以及.NET构件技术而开发的一个应用系统快速开发平台，用于帮助中小软件企业
//建立一条适合快速变化的开发团队，以达到节省开发成本、缩短开发时间，快速适应市场变化的目的。
//     AgileEAS.NET应用开发平台包含基础类库、资源管理平台、运行容器、开发辅助工具等四大部分，资源管理平台为敏捷并行开发提供了
//设计、实现、测试等开发过程的并行，应用系统的各个业务功能子系统，在系统体系结构设计的过程中被设计成各个原子功能模块，各个子
//功能模块按照业务功能组织成单独的程序集文件，各子系统开发完成后，由AgileEAS.NET资源管理平台进行统一的集成部署。
//
//     AgileEAS.NET SOA 中间件平台是一套免费的快速开发工具，可以不受限制的用于各种非商业开发之中，商业应用请向作者获取商业授权，
//商业授权也是免费的，但是对于非授权的商业应用视为侵权，开发人员可以参考官方网站和博客园等专业网站获取公开的技术资料，也可以向
//AgileEAS.NET官方团队请求技术支持。
//
// 官方网站：http://www.smarteas.net
// 团队网站：http://www.agilelab.cn
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由AgileEAS.NET数据模型设计工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
#endregion

using System;
using System.Linq;
using System.ComponentModel;
using System.Data;
using EAS.Data;
using EAS.Data.Access;
using EAS.Data.ORM;
using EAS.Data.Linq;
using System.Runtime.Serialization;

namespace HYPDM.Entities
{
    /// <summary>
    /// 实体对象 EAS_ACCOUNTS(EAS_ACCOUNTS)。
    /// </summary>
    [Serializable()]
    [Table("dbo.EAS_ACCOUNTS", "EAS_ACCOUNTS")]
    partial class EAS_ACCOUNTS : DataEntity<EAS_ACCOUNTS>, IDataEntity<EAS_ACCOUNTS>
    {
        public EAS_ACCOUNTS()
        {
        }

        protected EAS_ACCOUNTS(SerializationInfo info, StreamingContext context)
            : base(info, context)
        {
        }

        #region O/R映射成员

        /// <summary>
        /// LOGINID 。
        /// </summary>
        [Column("LOGINID", "LOGINID"), DataSize(64), PrimaryKey]
        [DisplayName("LOGINID")]
        public string LOGINID
        {
            get;
            set;
        }

        /// <summary>
        /// ORGANID 。
        /// </summary>
        [Column("ORGANID", "ORGANID"), DataSize(36)]
        [DisplayName("ORGANID")]
        public string ORGANID
        {
            get;
            set;
        }

        /// <summary>
        /// ORGANNAME 。
        /// </summary>
        [Column("ORGANNAME", "ORGANNAME"), DataSize(64)]
        [DisplayName("ORGANNAME")]
        public string ORGANNAME
        {
            get;
            set;
        }

        /// <summary>
        /// NAME 。
        /// </summary>
        [Column("NAME", "NAME"), DataSize(64)]
        [DisplayName("NAME")]
        public string NAME
        {
            get;
            set;
        }

        /// <summary>
        /// PASSWORD 。
        /// </summary>
        [Column("PASSWORD", "PASSWORD", DbType.Binary), DataSize(64)]
        [DisplayName("PASSWORD")]
        public byte[] PASSWORD
        {
            get;
            set;
        }

        /// <summary>
        /// LEADER 。
        /// </summary>
        [Column("LEADER", "LEADER"), DataSize(10)]
        [DisplayName("LEADER")]
        public int LEADER
        {
            get;
            set;
        }

        /// <summary>
        /// ATTRIBUTES 。
        /// </summary>
        [Column("ATTRIBUTES", "ATTRIBUTES"), DataSize(10)]
        [DisplayName("ATTRIBUTES")]
        public int ATTRIBUTES
        {
            get;
            set;
        }

        /// <summary>
        /// LOGINCOUNT 。
        /// </summary>
        [Column("LOGINCOUNT", "LOGINCOUNT"), DataSize(19)]
        [DisplayName("LOGINCOUNT")]
        public long LOGINCOUNT
        {
            get;
            set;
        }

        /// <summary>
        /// DESCRIPTION 。
        /// </summary>
        [Column("DESCRIPTION", "DESCRIPTION"), DataSize(256)]
        [DisplayName("DESCRIPTION")]
        public string DESCRIPTION
        {
            get;
            set;
        }

        /// <summary>
        /// ORIGINALID 。
        /// </summary>
        [Column("ORIGINALID", "ORIGINALID"), DataSize(256)]
        [DisplayName("ORIGINALID")]
        public string ORIGINALID
        {
            get;
            set;
        }

        /// <summary>
        /// CERTIFICATE 。
        /// </summary>
        [Column("CERTIFICATE", "CERTIFICATE"), DataSize(36)]
        [DisplayName("CERTIFICATE")]
        public string CERTIFICATE
        {
            get;
            set;
        }

        /// <summary>
        /// SEX 。
        /// </summary>
        [Column("SEX", "SEX"), DataSize(10)]
        [DisplayName("SEX")]
        public int SEX
        {
            get;
            set;
        }

        /// <summary>
        /// BIRTHDAY 。
        /// </summary>
        [Column("BIRTHDAY", "BIRTHDAY"), DataSize(23, 3)]
        [DisplayName("BIRTHDAY")]
        public DateTime BIRTHDAY
        {
            get;
            set;
        }

        /// <summary>
        /// ADDRESS 。
        /// </summary>
        [Column("ADDRESS", "ADDRESS"), DataSize(128)]
        [DisplayName("ADDRESS")]
        public string ADDRESS
        {
            get;
            set;
        }

        /// <summary>
        /// PHONE 。
        /// </summary>
        [Column("PHONE", "PHONE"), DataSize(64)]
        [DisplayName("PHONE")]
        public string PHONE
        {
            get;
            set;
        }

        /// <summary>
        /// MAIL 。
        /// </summary>
        [Column("MAIL", "MAIL"), DataSize(128)]
        [DisplayName("MAIL")]
        public string MAIL
        {
            get;
            set;
        }

        /// <summary>
        /// AVATAR 。
        /// </summary>
        [Column("AVATAR", "AVATAR", DbType.Binary), DataSize(2147483647)]
        [DisplayName("AVATAR")]
        public byte[] AVATAR
        {
            get;
            set;
        }

        #endregion
    }
}
